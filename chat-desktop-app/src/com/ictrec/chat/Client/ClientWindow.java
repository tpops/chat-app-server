/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ictrec.chat.Client;

import java.awt.event.KeyEvent;
import java.io.IOException;
import java.net.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author POPOOLA
 */
public class ClientWindow extends javax.swing.JFrame {
private boolean running = false;
    String Name;
    String Address;
    int Port;
    Client client ;
    private Thread Run;
    
    private Thread recieve;
    
    /**
     * Creates new form Client
     */
    public ClientWindow( String name, Client client) {
       running = true;
        this.Name = name;
        this.Address = Address;
        this.Port = Port;
       this.client = client;
        setVisible (true);
         
        boolean Connect  = client.OpenConnection();
        if (!Connect)
        {
            Console("No connection!!");           
        } 
        UIManager();
        initComponents();
        System.out.println("Now in Client");
        Console("Attempting connection to "+Port);
       String connection ="/c/"+name+"/e/";
       client.Send(connection.getBytes());
       Listen();
           
       // starting the recieve thread
       // open to recieve message from server;        
                       
            
      
       
    
                }
private void Listen() throws NumberFormatException {
recieve = new Thread("Recieve")
        {
public void run()
{
    while (running)
    {      
                
                String Rcvd = new String (client.Recieve().getData());
                
                Process(Rcvd);
                      
    }
    }
                }; recieve.start();
}
private void Process (String Rcvd)
{
    if (Rcvd.startsWith("/m/")) {
                    System.out.println(Rcvd.split("/m/|/e/")[1]);
                    Console(Rcvd.split("/m/|/e/")[1]);
                } else if (Rcvd.startsWith("/k/")) {
                    // disconnect user
                    
                           Console( "You have been kicked out");
                } else if (Rcvd.startsWith("/c/")) {
                    // collects the Id Given by the server
                   client.setId(Integer.parseInt(Rcvd.split("/c/|/e/")[1]));
                    Console("Successfully Connected to the server!!");
                    
                }else if (Rcvd.startsWith("/i/"))
                {
                    // replying to ping from server
                    client.Send(("/i/"+client.GetId()+"/e/").getBytes());
                }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        txtMessage = new javax.swing.JTextField();
        Bsend = new javax.swing.JButton();
        BtnLogOUt = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtHistory = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Group Chat");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        txtMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMessageActionPerformed(evt);
            }
        });
        txtMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMessageKeyPressed(evt);
            }
        });

        Bsend.setText("Send");
        Bsend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BsendActionPerformed(evt);
            }
        });

        BtnLogOUt.setText("Leave Room");
        BtnLogOUt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLogOUtActionPerformed(evt);
            }
        });

        txtHistory.setEditable(false);
        txtHistory.setColumns(20);
        txtHistory.setRows(5);
        jScrollPane1.setViewportView(txtHistory);

        jTabbedPane2.addTab("tab1", jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(BtnLogOUt)
                            .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Bsend))
                    .addComponent(jTabbedPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bsend))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnLogOUt))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BsendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BsendActionPerformed
        // TODO add your handling code here:
        Send(txtMessage.getText());
        
    }//GEN-LAST:event_BsendActionPerformed


    private void txtMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMessageActionPerformed

    private void txtMessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMessageKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            
        Send(txtMessage.getText());
        }
    }//GEN-LAST:event_txtMessageKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        client.Send(("/d/"+client.GetId()+"/e/").getBytes());
        
    }//GEN-LAST:event_formWindowClosing

    private void BtnLogOUtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLogOUtActionPerformed
        // TODO add your handling code here:
         client.Send(("/d/"+client.GetId()+"/e/").getBytes());
         
         dispose();
        
    }//GEN-LAST:event_BtnLogOUtActionPerformed




    private void Send (String Message)
{
        if (Message.equals("")) return;
        Console("Me:"+Message);
        
        
        Message = "/m/"+client.GetId()+"/id/"+Name+":"+Message+"/e/";
        
        client.Send(Message.getBytes());
        
       
        txtMessage.setText(null);
        
        
}
    /**
     * @param args the command line arguments
     */
    public void Console(String Message)
    {
        txtHistory.append("\n"+Message);
    }
    
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bsend;
    private javax.swing.JButton BtnLogOUt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea txtHistory;
    private javax.swing.JTextField txtMessage;
    // End of variables declaration//GEN-END:variables

    private void UIManager() {
        try {
           for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
               if ("Nimbus".equals(info.getName())) {
                   javax.swing.UIManager.setLookAndFeel(info.getClassName());
                   break; 
               }
           }
       } catch (ClassNotFoundException ex) {
           java.util.logging.Logger.getLogger(ClientWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
       } catch (InstantiationException ex) {
           java.util.logging.Logger.getLogger(ClientWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
       } catch (IllegalAccessException ex) {
           java.util.logging.Logger.getLogger(ClientWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
       } catch (javax.swing.UnsupportedLookAndFeelException ex) {
           java.util.logging.Logger.getLogger(ClientWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
       }
    }


}